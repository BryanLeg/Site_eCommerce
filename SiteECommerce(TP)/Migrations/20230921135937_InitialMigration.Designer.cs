// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SiteECommerce_TP_.Context;

#nullable disable

namespace SiteECommerce_TP_.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230921135937_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.Property<Guid>("OrderedProductsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrdersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderedProductsId", "OrdersId");

                    b.HasIndex("OrdersId");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("SiteECommerce_TP_.Models.Opinion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("op_id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("op_content");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit")
                        .HasColumnName("op_is_visible");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("op_rating");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Opinions");
                });

            modelBuilder.Entity("SiteECommerce_TP_.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ord_id");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ord_delivery_date");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ord_order_date");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("ord_price");

                    b.Property<DateTime>("ReceiptDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ord_receipt_date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ord_status");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SiteECommerce_TP_.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("p_id");

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("p_capacity");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("p_primary_color");

                    b.Property<string>("Constructor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("p_constructor");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("p_description");

                    b.Property<float>("Height")
                        .HasColumnType("real")
                        .HasColumnName("p_height");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("p_is_active");

                    b.Property<float>("Length")
                        .HasColumnType("real")
                        .HasColumnName("p_lenght");

                    b.Property<int>("OrderCount")
                        .HasColumnType("int")
                        .HasColumnName("p_order_count");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("p_picture");

                    b.Property<float>("Price")
                        .HasColumnType("real")
                        .HasColumnName("p_price");

                    b.Property<float>("Weigth")
                        .HasColumnType("real")
                        .HasColumnName("p_weight");

                    b.Property<float>("Width")
                        .HasColumnType("real")
                        .HasColumnName("p_width");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SiteECommerce_TP_.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("u_id");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("u_adress");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("u_city");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("u_country");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("u_firstname");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("u_is_active");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("u_lastname");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("u_mail");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("u_password");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int")
                        .HasColumnName("u_phone_number");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int")
                        .HasColumnName("u_postal_code");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("u_role");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.HasOne("SiteECommerce_TP_.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("OrderedProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiteECommerce_TP_.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiteECommerce_TP_.Models.Opinion", b =>
                {
                    b.HasOne("SiteECommerce_TP_.Models.Product", "Product")
                        .WithMany("Opinions")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiteECommerce_TP_.Models.User", "User")
                        .WithMany("Opinions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SiteECommerce_TP_.Models.Order", b =>
                {
                    b.HasOne("SiteECommerce_TP_.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SiteECommerce_TP_.Models.Product", b =>
                {
                    b.Navigation("Opinions");
                });

            modelBuilder.Entity("SiteECommerce_TP_.Models.User", b =>
                {
                    b.Navigation("Opinions");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
